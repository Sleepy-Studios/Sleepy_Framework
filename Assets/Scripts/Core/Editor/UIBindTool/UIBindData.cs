using System;
using System.Collections.Generic;
using UnityEngine;

namespace Core.Editor.UIBindTool
{
    /// <summary>
    /// UI绑定工具的数据结构，用于存储UI模块和视图的相关数据
    /// </summary>
    public static class UIBindData
    {
        /// <summary>
        /// 模块数据结构，表示一个UI模块
        /// </summary>
        public class UIModuleData
        {
            public string ModuleName;
            public Dictionary<string, UIViewData> Views = new Dictionary<string, UIViewData>();
        }

        /// <summary>
        /// 视图数据结构，表示一个UI视图
        /// </summary>
        public class UIViewData
        {
            public string ViewName;
            public string ViewScriptPath;
            public string ViewComponentPath;
            public string PrefabPath;
            public bool IsAutoGenerated; // 是否是自动生成的
            public DateTime LastModifiedTime; // 最后修改时间
        }

        // 所有UI模块的集合
        public static Dictionary<string, UIModuleData> UIModules { get; } = new Dictionary<string, UIModuleData>();
        
        // 当前编辑的预制体
        public static GameObject CurrentPrefab { get; set; }
        
        // 绑定工具设置
        public static string NamespaceName { get; set; } = "HotUpdate";
        public static string OutputPath { get; set; } = "Assets/Scripts/HotUpdate/Module/";
        public static string ModuleName { get; set; } = "";
        public static string ViewName { get; set; } = "";
        
        // UI管理器折叠状态
        public static Dictionary<string, bool> ModulesFoldout { get; } = new Dictionary<string, bool>();
        public static Dictionary<string, bool> ViewsFoldout { get; } = new Dictionary<string, bool>();
        public static bool ShowAllUI { get; set; } = false;

        /// <summary>
        /// 重置所有数据状态
        /// </summary>
        public static void ResetData()
        {
            UIModules.Clear();
            CurrentPrefab = null;
            ModuleName = "";
            ViewName = "";
            ModulesFoldout.Clear();
            ViewsFoldout.Clear();
            ShowAllUI = false;
        }
    }
}
